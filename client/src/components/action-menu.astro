---
import Icon from "astro-icon";

import Button from "@/components/ui/button.astro";

const id = Astro.params.id
---
<div class="flex items-center justify-center z-20">
  <div class="relative inline-block text-left">
    <Button 
      variant="ghost" 
      id="menu-actions-dropdown-btn"
      aria-haspopup="true"
      aria-expanded="true"
      aria-controls="menu-actions-dropdown"
      aria-label="Menu actions dropdown"
      class=""
      size="sm"
      >
      <Icon 
        name="tabler:dots-vertical" 
        class="w-6 h-6 text-slate-500 cursor-pointer" 
      />
    </Button>
    <div id="menu-actions-dropdown" class="hidden origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5">
      <div 
        class="py-2 p-2 divide-y divide-gray-100" 
        role="menu"
        aria-orientation="vertical"
        aria-labelledby="menu-actions-dropdown-btn"
      >
        <a href={`/post/edit/${id}`} class="flex rounded-md px-4 py-2 text-sm text-slate-700 hover:bg-gray-100 active:bg-blue-100 cursor-pointer" role="menuitem">
          Edit
        </a>
        <a id="delete-post" class="flex rounded-md px-4 py-2 text-sm text-red-700 hover:bg-red-100 active:bg-red-100 cursor-pointer" role="menuitem">
          Delete
        </a>
      </div>
    </div>
  </div>
</div>
<script>
const menuActionsDropdownBtn = (document.getElementById('menu-actions-dropdown-btn') as HTMLButtonElement);
const menuActionsDropdown = (document.getElementById('menu-actions-dropdown') as HTMLDivElement);

menuActionsDropdownBtn.addEventListener('click', () => {
  menuActionsDropdown.classList.toggle('hidden');
});

menuActionsDropdownBtn.addEventListener('keydown', (e) => {
  if (e.key === 'Enter') {
    menuActionsDropdown.classList.toggle('hidden');
  }
});

window.addEventListener('click', (e) => {
  if (!menuActionsDropdownBtn.contains(e.target as Node) && !menuActionsDropdown.contains(e.target as Node)) {
    menuActionsDropdown.classList.add('hidden');
  }
});

const baseUrl = import.meta.env.PUBLIC_API
const postId = window.location.href.split("/").pop();
document.getElementById("delete-post")!.addEventListener("click", () => {
  const deletePost = confirm("Are you sure you want to delete this post?");

  if (deletePost) {
    fetch(`${baseUrl}/posts/${postId}`, {
      method: "DELETE",
      credentials: "include",
    })
    .then((res) => res.json())
    .then(() => {
      window.location.href = "/dashboard";
    })
    .catch((err) => {
      console.log(err);
      alert("Something went wrong. Please try again.");
    });
  }
})
</script>