---
import Label from "@/components/ui/label.astro";
import Input from "@/components/ui/input.astro";
import Button from "@/components/ui/button.astro";
import AuthLayout from "@/layouts/auth-layout.astro";
import ErrorMessage from "@/components/error-message.astro";
import Icon from 'astro-icon'

// const cookie = Astro.cookies.get("auth_token");

// if (cookie?.value) {
//   return Astro.redirect("/dashboard");
// }

interface Props {
  title: string;
}
---

<AuthLayout title="Log in">
  <div class="shadow-md rounded-xl w-[400px] px-8 py-16">
    <h1 class="text-center text-xl font-bold">Log in to your account</h1>
    <form class="flex flex-col gap-8 mt-6" id="login-form" method="POST">
      <div class="flex flex-col gap-2">
        <Label for="email">Email</Label>
        <Input
          type="email"
          name="email"
          id="email"
          required
          placeholder="johndoe@gmail.com"
        />
        <ErrorMessage id="error-msg" />
      </div>
      <div class="flex flex-col gap-2">
        <Label for="password">Password</Label>
        <Input
          type="password"
          name="password"
          id="password"
          required
          minlength={8}
          placeholder="supersecret"
        />
      </div>
      <div>
        <a href="/forgot-password" class="text-primary-600">
          Forgot password?
        </a>
      </div>
      <Button type="submit">
        <Icon name="tabler:loader" class="hidden w-5 h-5 mr-2 text-white animate-spin" />
        Login
      </Button>
    </form>
    <div class="flex items-center justify-between mt-8">
      <p class="">Don't have an account?</p>
      <a href="/register" class="text-primary-600">Register</a>
    </div>
  </div>
</AuthLayout>
<script>
  const form = document.getElementById("login-form") as HTMLFormElement;
  const errorMsg = document.getElementById("error-msg") as HTMLDivElement;
  const BASE_URL = import.meta.env.PUBLIC_API;

  const submitBtn =  document.querySelector('button[type="submit"]');

  form.addEventListener("submit", (e) => {
    e.preventDefault();

    submitBtn.classList.add("disabled:cursor-not-allowed")
    submitBtn.disabled = true;
    submitBtn.querySelector("svg").classList.remove("hidden")

    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries());
    fetch(`${BASE_URL}/auth/login`, {
      method: "POST",
      body: JSON.stringify(data),
      credentials: "include",
      headers: {
        "Content-Type": "application/json",
        Accept: "*/*",
      },
    })
      .then(async (res) => {
        if (!res.ok) {
          const error = await res.json();
          throw new Error(error.error);
        } else {
          return res.json();
        }
      })
      .then((res) => {
        localStorage.setItem("user", JSON.stringify(res.data));
        const redirect = new URLSearchParams(window.location.search).get(
          "redirectedFrom"
        );
        window.location.href = redirect ? redirect : "/dashboard";      
      })
      .catch((err) => {
        errorMsg.classList.remove("hidden");
        errorMsg.classList.add("flex");
        errorMsg.querySelector("span")!.textContent = err.message;

        submitBtn.classList.remove("disabled:cursor-not-allowed")
        submitBtn.disabled = false;
        submitBtn.querySelector("svg").classList.add("hidden")
      });
  });
</script>
